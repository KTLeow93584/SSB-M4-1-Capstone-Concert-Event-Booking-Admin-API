<!DOCTYPE html>
<html>

<head>
    <title>Concert Event Hosting Services (Republic of Rock) API Documentation</title>
    <link rel="stylesheet" href="/css/style-tailwind.css" type="text/css">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.3.0/flowbite.min.css" rel="stylesheet" />
</head>

<body>
    <!-- ======================================= -->
    <!-- Navigation + Side Panel + Body -->
    <div class="w-full">
        <%- include('../../partials/nav_panel', { has_side_bar: true }) %>
        <%- include('../../partials/side_bar_code_doc') %>

        <div class="p-4 sm:ml-64">
            <div class="mt-16">
                <p class="text-2xl font-bold">
                    Category: Authentication (Consumers)
                </p>
                <div class="mt-5 mx-8">
                    <div class="w-full">
                        <ul class="list-disc list-inside">
                            <!-- Registration API -->
                            <%- include('../../partials/code_doc_section', {
                                title: 'Registration',
                                description: 'Has two variants: Registration via Social Platforms (Google, Facebook) or Registration via Email & Password Combinations. Also can register either as an individual or an organization.',
                                endpoint_url: 'api/register',
                                endpoint_type: 'POST',
                                endpoint_parameters: {
                                    email: '...@some-email.com',
                                    country_id: 1,
                                    contact_number: '123456789',
                                    password: '...',
                                    social_provider: 'facebook',
                                    social_uid: '123456789',
                                    name: '...',
                                    nric: '...',
                                    organization_name: '...',
                                    organization_registration_number: '...'
                                },
                                endpoint_success_responses: [
                                    {
                                        name: 'Success. (Code: 201)',
                                        description: 'Nothing to return to front-end app.',
                                        json_response: null
                                    }
                                ], 
                                endpoint_failed_responses: [
                                    {
                                        name: 'Incomplete Form',
                                        description: 'Occurs when there are missing fields in the form.',
                                        code_message: '405',
                                        json_response: `
                                            {
                                                success: false,
                                                error: {
                                                    status: "incomplete-form",
                                                    code: 405
                                                }
                                            }
                                        `
                                    },
                                    {
                                        name: 'Ambiguous Registration Type' ,
                                        description: 'Occurs when user sends in a form containing which identifies him/her as both an \"individual\" and \"organization\".',
                                        code_message: '405',
                                        json_response: `
                                            {
                                                success: false,
                                                error: {
                                                    status: "ambiguous-registration-type",
                                                    code: 405
                                                }
                                            }
                                        `
                                    },
                                    {
                                        name: 'Incorrect Password Format' ,
                                        description: 'Password must meet the following criteria - Contains at least 1 symbol, 1 number, 1uppercase alphabet, 1 lowercase alphabet, at least 8 characters long and no whitespaces.',
                                        code_message: '405',
                                        json_response: `
                                            {
                                                success: false,
                                                error: {
                                                    status: "incorrect-password-format",
                                                    code: 405
                                                }
                                            }
                                        `
                                    },
                                    {
                                        name: 'User already exists/Email is in use.' ,
                                        description: 'The email input already ties to an existing account.',
                                        code_message: '409',
                                        json_response: `
                                            {
                                                success: false,
                                                error: {
                                                    status: "user-already-exist",
                                                    code: 409
                                                }
                                            }
                                        `
                                    },
                                    {
                                        name: 'Server Codebase Error.' ,
                                        description: 'Read through the compiler\'s logs, then check the codebase to identify where this error is coming from.',
                                        code_message: '500',
                                        json_response: `
                                            {
                                                success: false,
                                                error: {
                                                    status: "server-error",
                                                    code: 500
                                                }
                                            }
                                        `
                                    }
                                ]
                            }) %>
                            <!-- Login API -->
                            <%- include('../../partials/code_doc_section', {
                                title: 'Login',
                                description: 'Has two variants: Logging in via Social Platforms (Google, Facebook) or Logging in via Email & Password Combinations.',
                                endpoint_url: 'api/login',
                                endpoint_type: 'POST',
                                endpoint_parameters: {
                                    email: '...@some-email.com',
                                    password: '...',
                                    social_provider: 'facebook',
                                    social_uid: '123456789',
                                    social_access_token: '...',
                                    social_refresh_token: '...',
                                },
                                endpoint_success_responses: [
                                    {
                                        name: 'Success. (With Results)',
                                        description: '',
                                        json_response: `
                                            user: {
                                                user_id: integer,
                                                name: string
                                            },
                                            token: string,
                                            auth_type: "socials" or "basic" (Determined by the flag, "isViaSocials")
                                        `
                                    }
                                ], 
                                endpoint_failed_responses: [
                                    {
                                        name: 'No User Found',
                                        description: '[Social Login] No account was located with the social credentials. Front-end should move the user to the registration page with this response.', 
                                        code_message: '404',
                                        json_response: `
                                            {
                                                success: false,
                                                error: {
                                                    status: "no-user-found",
                                                    code: 404
                                                }
                                            }
                                        `
                                    },
                                    {
                                        name: 'Incorrect Email/Password Combination' ,
                                        description: '[Email Password Login] The combined credentials either did not match to any registered users or it was due to an invalid password (upon matched). Front-end should return an error indicating this.',
                                        code_message: '401',
                                        json_response: `
                                            {
                                                success: false,
                                                error: {
                                                    status: "incorrect-credentials",
                                                    code: 401
                                                }
                                            }
                                        `
                                    },
                                    {
                                        name: 'Server Codebase Error.' ,
                                        description: 'Read through the compiler\'s logs, then check the codebase to identify where this error is coming from.',
                                        code_message: '500',
                                        json_response: `
                                            {
                                                success: false,
                                                error: {
                                                    status: "server-error",
                                                    code: 500
                                                }
                                            }
                                        `
                                    }
                                ]
                            }) %>
                            <!-- Logout API -->
                            <%- include('../../partials/code_doc_section', {
                                title: 'Logout',
                                description: 'In the event the login fails, do nothing for the back-end side. Front-end app, however should clear the cached token.',
                                endpoint_url: 'api/logout',
                                endpoint_type: 'POST',
                                endpoint_parameters: null,
                                endpoint_success_responses: [
                                    {
                                        name: 'Success. (Code: 201)',
                                        description: 'Nothing to return to front-end app.',
                                        json_response: null
                                    }
                                ], 
                                endpoint_failed_responses: [
                                    {
                                        name: 'Server Codebase Error.' ,
                                        description: 'Read through the compiler\'s logs, then check the codebase to identify where this error is coming from.',
                                        code_message: '500',
                                        json_response: `
                                            {
                                                success: false,
                                                error: {
                                                    status: "server-error",
                                                    code: 500
                                                }
                                            }
                                        `
                                    }
                                ]
                            }) %>
                            <!-- Forget Password API -->
                            <%- include('../../partials/code_doc_section', {
                                title: 'Forget Password',
                                description: '',
                                endpoint_url: 'api/password/forget',
                                endpoint_type: 'POST',
                                endpoint_parameters: null,
                                endpoint_success_responses: [
                                    {
                                        name: 'Success. (Code: 201)',
                                        description: 'Nothing to return to front-end app.',
                                        json_response: null
                                    }
                                ], 
                                endpoint_failed_responses: [
                                    {
                                        name: 'No User Found',
                                        description: 'No account was located with the input email.', 
                                        code_message: '404',
                                        json_response: `
                                            {
                                                success: false,
                                                error: {
                                                    status: "no-user-found",
                                                    code: 404
                                                }
                                            }
                                        `
                                    },
                                    {
                                        name: 'Server Codebase Error.' ,
                                        description: 'Read through the compiler\'s logs, then check the codebase to identify where this error is coming from.',
                                        code_message: '500',
                                        json_response: `
                                            {
                                                success: false,
                                                error: {
                                                    status: "server-error",
                                                    code: 500
                                                }
                                            }
                                        `
                                    }
                                ]
                            }) %>
                            <!-- Verify Password Reset API -->
                            <%- include('../../partials/code_doc_section', {
                                title: 'Verify Password Reset Request',
                                description: 'Sanity check from the front-end app to test if the request tallied is valid.',
                                endpoint_url: 'api/password/reset/verify',
                                endpoint_type: 'POST',
                                endpoint_parameters: {
                                    token: '...'
                                },
                                endpoint_success_responses: [
                                    {
                                        name: 'Success. (Code: 201)',
                                        description: 'Nothing to return to front-end app.',
                                        json_response: null
                                    }
                                ], 
                                endpoint_failed_responses: [
                                    {
                                        name: 'Server Codebase Error.' ,
                                        description: 'Read through the compiler\'s logs, then check the codebase to identify where this error is coming from.',
                                        code_message: '500',
                                        json_response: `
                                            {
                                                success: false,
                                                error: {
                                                    status: "server-error",
                                                    code: 500
                                                }
                                            }
                                        `
                                    }
                                ]
                            }) %>
                            <!-- Perform Password Reset API -->
                            <%- include('../../partials/code_doc_section', {
                                title: 'Perform Password Reset Request',
                                description: 'Execute the request.',
                                endpoint_url: 'api/password/reset',
                                endpoint_type: 'POST',
                                endpoint_parameters: {
                                    password: '...',
                                    token: '...'
                                },
                                endpoint_success_responses: [
                                    {
                                        name: 'Success. (Code: 201)',
                                        description: 'Nothing to return to front-end app.',
                                        json_response: null
                                    }
                                ], 
                                endpoint_failed_responses: [
                                    {
                                        name: 'Server Codebase Error.' ,
                                        description: 'Read through the compiler\'s logs, then check the codebase to identify where this error is coming from.',
                                        code_message: '500',
                                        json_response: `
                                            {
                                                success: false,
                                                error: {
                                                    status: "server-error",
                                                    code: 500
                                                }
                                            }
                                        `
                                    }
                                ]
                            }) %>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- ======================================= -->
    <script src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.3.0/flowbite.min.js"></script>
</body>

</html>